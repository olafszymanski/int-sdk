syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "integration/pb";

message Request {
    SportType sport_type = 1;
}

message Response {
    repeated Event events = 1;
}

service Integration {
    rpc GetPreMatch (Request) returns (Response) {}
    rpc GetLive (Request) returns (Response) {}
}

enum SportType {
    BASKETBALL = 0;
}

enum MarketType {
    MATCH_BETTING = 0;

    MONEYLINE = 1;
    MONEYLINE_1ST_QUARTER = 2;
    MONEYLINE_1ST_HALF = 3;
    
    RACE_TO_X_POINTS = 4;
    
    OUTRIGHT = 5;

    TOTAL_POINTS = 6;
    TOTAL_POINTS_ODD_EVEN = 7;
    TOTAL_POINTS_1ST_QUARTER = 8;
    TOTAL_POINTS_1ST_QUARTER_ODD_EVEN = 9;
    TOTAL_POINTS_1ST_HALF = 10;
    TOTAL_POINTS_1ST_HALF_ODD_EVEN = 11;
    TOTAL_POINTS_HOME_TEAM = 12;
    TOTAL_POINTS_HOME_TEAM_1ST_QUARTER = 13;
    TOTAL_POINTS_HOME_TEAM_1ST_HALF = 14;
    TOTAL_POINTS_AWAY_TEAM = 15;
    TOTAL_POINTS_AWAY_TEAM_1ST_QUARTER = 16;
    TOTAL_POINTS_AWAY_TEAM_1ST_HALF = 17;

    SPREAD_1ST_QUARTER = 18;
    SPREAD_1ST_HALF = 19;

    PLAYER_TOTAL_POINTS = 20;
    PLAYER_TOTAL_ASSISTS = 21;
    PLAYER_TOTAL_REBOUNDS = 22;
    PLAYER_TOTAL_3_POINTERS = 23;
}

message Odds {
    double decimal = 1;
    string american = 2;
    string numerator = 3;
    string denominator = 4;
    bool is_fixed = 5;
}

message Outcome {
    enum OutcomeType {
        HOME = 0;
        AWAY = 1;
        DRAW = 2;
        COMPETITOR = 3;
        OVER = 4;
        UNDER = 5;
        ODD = 6;
        EVEN = 7;
    }

    OutcomeType type = 1;
    string external_id = 2;
    optional string name = 3; // optionally used in case type is COMPETITOR
    optional double points = 4; // optionally used for points markets like total points or spread
    Odds odds = 5;
    bool is_available = 6;
}

message Market {
    MarketType type = 1;
    string external_id = 2;
    optional string name = 3; // optionally used in case of a player market
    repeated Outcome outcomes = 4;
}

message Participant {
    enum ParticipantType {
        HOME = 0;
        AWAY = 1;
        COMPETITOR = 2;
    }

    ParticipantType type = 1;
    string name = 2;
}

message Event {
    string id = 1;
    string external_id = 2;
    SportType sport_type = 3;
    string name = 4;
    string league = 5;
    google.protobuf.Timestamp start_time = 6;
    bool is_live = 7;
    repeated Participant participants = 8;
    repeated Market markets = 9;
    string link = 10;
}
